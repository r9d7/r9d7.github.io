---
import ViewTransitions from "astro/components/ViewTransitions.astro";

import { Container } from "~/components/Container";
import { ThemeConfigMenu } from "~/components/ThemeConfigMenu";

import "~/styles/global.css";

interface Props {
  title: string;
  description: string;
  image?: string;
}

const {
  title: titleProp,
  description,
  image = "TODO: ADD PLACEHOLDER",
} = Astro.props;

const title = [titleProp, "r9d7"].filter(Boolean).join(" / ");
const canonicalURL = new URL(Astro.url.pathname, Astro.site);
---

<html lang="en" transition:animate="none" class="group group/html">
  <head>
    {/* Global Metadata  */}
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <meta name="generator" content={Astro.generator} />

    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link
      rel="alternate"
      type="application/rss+xml"
      title={title}
      href={new URL("rss.xml", Astro.site)}
    />

    {/* Canonical URL  */}
    <link rel="canonical" href={canonicalURL} />

    {/* Primary Meta Tags  */}
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description} />

    {/* Open Graph / Facebook  */}
    <meta property="og:type" content="website" />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={new URL(image, Astro.url)} />

    {/* Twitter  */}
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={Astro.url} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={new URL(image, Astro.url)} />

    <script is:inline transition:persist>
      function getDesiredColorScheme() {
        if (window?.localStorage?.getItem("color-scheme")) {
          return window.localStorage.getItem("color-scheme");
        }

        if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
          return "dark";
        }

        return "light";
      }

      function setColorScheme() {
        const currentColorScheme = getDesiredColorScheme();

        localStorage.setItem("color-scheme", currentColorScheme);
        document.documentElement.setAttribute(
          "data-color-scheme",
          currentColorScheme,
        );
      }

      setColorScheme();

      document.addEventListener("astro:after-swap", () => {
        setColorScheme();
      });
    </script>

    <ViewTransitions />
  </head>

  <body>
    <!-- <TransitionLoadingIndicator client:load /> -->

    <div class="w-full min-h-screen bg-screen flex flex-col p-4 gap-4">
      <Container>
        <header
          class="bg-accent text-accent-foreground flex items-center justify-between px-2"
        >
          <a href="/" class="font-serif font-bold border-0 text-3xl -ml-1"
            >R9D7</a
          >

          <nav class="flex gap-2 sm:gap-4">
            {
              [
                { href: "/", displayText: "home" },
                // { href: "/about", displayText: "about" },
                // { href: "/blog", displayText: "blog" },
                // { href: "/projects", displayText: "projects" },
                // {
                //   href: "https://agate-shingle-f97.notion.site/Radu-Dascalu-74c2120d6aad4ad2a6b48ee4ece69de9",
                //   displayText: "resume",
                // },
                { href: "/rss.xml", displayText: "rss feed" },
              ].map(({ href, displayText }) => (
                <a
                  href={href}
                  target={displayText === "resume" ? "_blank" : undefined}
                  class="border-accent-foreground"
                >
                  /{displayText}
                </a>
              ))
            }
            <ThemeConfigMenu client:load />
          </nav>
        </header>
      </Container>

      <Container class="grow-1">
        <main transition:animate="fade">
          <slot />
        </main>
      </Container>

      <Container>
        <footer class="grid sm:grid-cols-2 lg:grid-cols-3 gap-4">
          <div class="text-center lg:text-left max-lg:col-[1_/_-1]">
            Unless explicitly stated on the individual page, all the content on
            this website is Â© Radu Dascalu under a Creative Commons BY-NC-ND
            license, which means you can copy and share the stuff freely, as
            long as you link back to r9d7.github.io, donâ€™t make money with it,
            and donâ€™t alter the content. Thanks for reading!
          </div>

          <div class="text-center sm:text-left lg:text-center">
            ðŸ”¥<a href="mailto:radu.dascalu97@gmail.com" target="_blank"
              >radu.dascalu97@gmail.com</a
            >ðŸ”¥
          </div>

          <div class="text-center sm:text-right">
            <p>
              Powered by {
                [
                  { href: "https://astro.build/", displayText: "Astro" },
                  { href: "https://www.solidjs.com/", displayText: "Solid.js" },
                  { href: "https://unocss.dev/", displayText: "UnoCSS" },
                ]
                  .map(({ href, displayText }, i) => (
                    <a href={href} target="_blank">
                      {displayText}
                    </a>
                  ))
                  .reduce((prev, curr) => [prev, ", ", curr])
              }
            </p>
            <p>
              Hosted on <a
                href="https://github.com/r9d7/r9d7.github.io/"
                target="_blank">GitHub</a
              > Pages
            </p>
          </div>
        </footer>
      </Container>
    </div>
  </body>
</html>
